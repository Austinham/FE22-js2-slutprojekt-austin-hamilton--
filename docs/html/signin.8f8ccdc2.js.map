{"mappings":"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","sources":["Documents/GitHub/frontend-22-VC-/FE22-js2-slutprojekt-austin-hamilton--/src/modules/userpage.ts"],"sourcesContent":["const url: string = `https://login-2c7ee-default-rtdb.europe-west1.firebasedatabase.app/`;\nconst loggedInUserJSON: string | null = localStorage.getItem(\"loggedInUser\");\nconst loggedInUser = loggedInUserJSON ? JSON.parse(loggedInUserJSON) : null;\nconst newUrl = loggedInUser ? `${url}users/${loggedInUser.id}.json` : null;\nconsole.log(loggedInUser.id);\n\nconsole.log(loggedInUser.username, \"2\");\n\nconst postButton = document.querySelector(\"#post-button\") as HTMLButtonElement;\nconst deleteUserBtn = document.querySelector(\n  \"#dele-button\"\n) as HTMLButtonElement;\nconst postInput = document.querySelector(\"#status\") as HTMLInputElement;\nconst container = document.querySelector(\"#container\") as HTMLDivElement;\nconst textContent = document.querySelector(\"#content\") as HTMLDivElement;\nconst post = document.querySelector(\"#post\") as HTMLDivElement;\n\npostButton.addEventListener(\"click\", updatePost); // add event listener to call updatePost() function\n\ndeleteUserBtn.addEventListener(\"click\", () => {\n  if (newUrl) {\n    const init = {\n      method: \"DELETE\",\n    };\n    fetch(newUrl, init)\n      .then((response) => {\n        console.log(response.status);\n        localStorage.clear();\n        window.location.assign(\"../index.html\"); // reload the page to clear data and redirect to login page\n      })\n      .catch((error) => {\n        console.log(`Error deleting user account: ${error}`);\n        alert(\"Error deleting user account. Please try again later.\");\n      });\n  }\n});\nasync function updatePost(e: Event): Promise<void> {\n  e.preventDefault();\n\n  const writemessage: string = postInput.value;\n  console.log(writemessage);\n\n  if (loggedInUser && loggedInUser.id) {\n    const newUrl = `${url}users/${loggedInUser.id}.json`;\n    const response = await fetch(newUrl);\n    const userData = (await response.json()) as { posts?: string[] };\n    console.log(userData, \"posts\");\n\n    if (userData !== null && userData.posts !== undefined) {\n      userData.posts.push(writemessage);\n    } else if (userData !== null) {\n      userData.posts = [writemessage];\n    } else {\n      // handle case where userData is null or undefined\n    }\n\n    const init = {\n      method: \"PATCH\",\n      body: JSON.stringify(userData),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    };\n\n    const updateResponse = await fetch(newUrl, init);\n    const dataFromPost = (await updateResponse.json()) as { posts?: string[] };\n    console.log(dataFromPost, \"hello ew world!\");\n  }\n  await fetchData();\n  \n}\n\n// displaying the posts\nasync function fetchData(): Promise<void> {\n  if (loggedInUser && loggedInUser.id) {\n    const usersUrl = `${url}users.json`;\n    try {\n      const response = await fetch(usersUrl);\n      const data = await response.json();\n\n      if (data) {\n        const user = data[loggedInUser.id];\n        if (user && user.posts) {\n          const userPosts = user.posts\n            .map((post) => `<p><strong>You:</strong> ${post}</p>`)\n            .join(\"\");\n          post.innerHTML = userPosts;\n        } else {\n          console.log(`Error: no posts found for user ${loggedInUser.id}.`);\n        }\n      } else {\n        console.log(\"Error: data is null or undefined.\");\n      }\n    } catch (error) {\n      console.log(`Error fetching data from ${usersUrl}: ${error}`);\n    }\n  }\n}\nfetchData();\n\nasync function fetchingAlldata() {\n  const newUrl = `${url}users.json`;\n  const response = await fetch(newUrl);\n  const showDataFromProfile = await response.json() as Record<string, User>;\n  showOtherProfiles(showDataFromProfile);\n  console.log(showDataFromProfile);\n}\nfetchingAlldata();\ninterface UserProfile {\n  username: string;\n  password: string;\n  image: string;\n  posts?: string[];\n}\n\nfunction showOtherProfiles(showDataFromProfile: Record<string, UserProfile>) {\n  const keysfromUsernameData = Object.keys(showDataFromProfile);\n  const objectFromUsernameData = Object.values(showDataFromProfile);\n\n  const modal = document.getElementById(\"myModal\") as HTMLDivElement;\n  const modalContent = document.getElementById(\"modal-content\") as HTMLDivElement;\n  const closeBtn = document.getElementsByClassName(\"close\")[0];\n  \n\n  for (let i = 0; i < objectFromUsernameData.length; i++) {\n    const userProfile = objectFromUsernameData[i];\n    const usernameProfile = document.createElement('h4');\n    const postsProfile = document.createElement('h4');\n    const imageProfile = document.createElement('img'); // create image element\n    document.body.appendChild(usernameProfile);\n    document.body.appendChild(postsProfile);\n    usernameProfile.innerText = userProfile.username;\n    imageProfile.src = userProfile.image; // set the image URL\n\n    usernameProfile.addEventListener('click', () => {\n      const latestPost = userProfile.posts && userProfile.posts.length > 0 ? userProfile.posts[userProfile.posts.length - 1] : '';\n      const listFromData: UserProfile & { id: string, latestPost: string } = { ...userProfile, id: keysfromUsernameData[i], latestPost };\n      console.log(listFromData);\n      localStorage.setItem('loggedInUser', JSON.stringify(listFromData));\n      modalContent.innerHTML = \"\";\n      const usernameWithLatestPost = document.createElement('p');\n      usernameWithLatestPost.innerText = `${userProfile.username} - Latest Post: ${latestPost}`;\n      modalContent.appendChild(usernameWithLatestPost);\n      modalContent.appendChild(imageProfile); // append the image element to the modal content\n      modal.style.display = \"block\";\n    });\n  }\n\n  closeBtn.addEventListener('click', () => {\n    modal.style.display = \"none\";\n  });\n}\n\n\n\n\ninterface User {\n  username: string;\n  password: string;\n  image: string;\n}\n\nif (loggedInUserJSON) {\n  const loggedInUser: User = JSON.parse(loggedInUserJSON);\n  const username = loggedInUser.username;\n  const image = loggedInUser.image;\n  \n  const usernameElement = document.querySelector(\"#name\") as HTMLElement;\n\n  console.log(usernameElement)\n  const imageElement = document.querySelector(\"#images\") as HTMLImageElement;\n\n  usernameElement.textContent = username;\n  imageElement.src = image;\n  console.log(username, \"hello\");\n} else {\n  // handle case where loggedInUserJSON is null or undefined\n}\n\n"],"names":["$4cc691f21b4ff0fb$var$url","$4cc691f21b4ff0fb$var$loggedInUserJSON","localStorage","getItem","$4cc691f21b4ff0fb$var$loggedInUser","JSON","parse","$4cc691f21b4ff0fb$var$newUrl","id","console","log","username","$4cc691f21b4ff0fb$var$postButton","document","querySelector","$4cc691f21b4ff0fb$var$deleteUserBtn","$4cc691f21b4ff0fb$var$postInput","$4cc691f21b4ff0fb$var$post","async","$4cc691f21b4ff0fb$var$fetchData","usersUrl","response","fetch","data","json","user","posts","userPosts","map","post","join","innerHTML","error","addEventListener","e","preventDefault","writemessage","value","newUrl","userData","undefined","push","init","method","body","stringify","headers","updateResponse","dataFromPost","then","status","clear","window","location","assign","catch","alert","showDataFromProfile","keysfromUsernameData","Object","keys","objectFromUsernameData","values","modal","getElementById","modalContent","closeBtn","getElementsByClassName","i","length","userProfile","usernameProfile","createElement","postsProfile","imageProfile","appendChild","innerText","src","image","latestPost","listFromData","setItem","usernameWithLatestPost","style","display","$4cc691f21b4ff0fb$var$showOtherProfiles","$4cc691f21b4ff0fb$var$fetchingAlldata","loggedInUser","usernameElement","imageElement","textContent"],"version":3,"file":"signin.8f8ccdc2.js.map"}